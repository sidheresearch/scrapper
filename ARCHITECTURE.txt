```
╔══════════════════════════════════════════════════════════════════════════╗
║                     CRYSTAL SCRAPER ARCHITECTURE                         ║
╚══════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────┐
│                           USER INTERFACE                                 │
│  ┌───────────────────────────────────────────────────────────────────┐  │
│  │                    React Frontend (Port 3000)                     │  │
│  │  ┌─────────────┐  ┌──────────────┐  ┌─────────────────────────┐ │  │
│  │  │ Scraper     │  │   Results    │  │     History            │ │  │
│  │  │ Form        │  │   Preview    │  │     Viewer             │ │  │
│  │  │             │  │              │  │                         │ │  │
│  │  │ • URL Input │  │ • Statistics │  │ • Past Scrapes         │ │  │
│  │  │ • Depth     │  │ • Content    │  │ • Download Links       │ │  │
│  │  │ • Options   │  │ • Download   │  │ • View Details         │ │  │
│  │  └─────────────┘  └──────────────┘  └─────────────────────────┘ │  │
│  │                                                                   │  │
│  │  ┌────────────────────────────────────────────────────────────┐  │  │
│  │  │              API Service (services/api.js)                 │  │  │
│  │  │  • scrapeWebsite()  • getResultDetails()                   │  │  │
│  │  │  • listResults()    • downloadResult()                     │  │  │
│  │  └────────────────────────────────────────────────────────────┘  │  │
│  └───────────────────────────────────────────────────────────────────┘  │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                               │ HTTP/JSON (CORS Enabled)
                               │
┌──────────────────────────────▼──────────────────────────────────────────┐
│                      BACKEND API SERVER                                  │
│  ┌───────────────────────────────────────────────────────────────────┐  │
│  │                   Flask REST API (Port 5000)                      │  │
│  │                                                                   │  │
│  │  ┌─────────────┐  ┌──────────────┐  ┌──────────────────────────┐│  │
│  │  │  Endpoints  │  │   Storage    │  │    Response Handler      ││  │
│  │  │             │  │              │  │                          ││  │
│  │  │ POST /scrape│  │ Results Dict │  │ JSON Serialization       ││  │
│  │  │ GET /results│  │ File Manager │  │ Error Handling           ││  │
│  │  │ GET /download│ │ .txt Files   │  │ CORS Headers             ││  │
│  │  │ GET /health │  │              │  │                          ││  │
│  │  └─────────────┘  └──────────────┘  └──────────────────────────┘│  │
│  └───────────────────────────────────────────────────────────────────┘  │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                               │ Python Import
                               │
┌──────────────────────────────▼──────────────────────────────────────────┐
│                        SCRAPER ENGINE                                    │
│  ┌───────────────────────────────────────────────────────────────────┐  │
│  │                    scraper/scraper.py                             │  │
│  │                                                                   │  │
│  │  ┌──────────────────────────────────────────────────────────────┐│  │
│  │  │              Scraper Class (Main Engine)                     ││  │
│  │  │  ┌────────────┐  ┌────────────┐  ┌────────────────────────┐ ││  │
│  │  │  │  Strategy  │  │  Strategy  │  │      Strategy          │ ││  │
│  │  │  │     #1     │  │     #2     │  │        #3              │ ││  │
│  │  │  │            │  │            │  │                        │ ││  │
│  │  │  │  aiohttp + │  │ Playwright │  │    Selenium            │ ││  │
│  │  │  │BeautifulSoup│ │  (JS Sites)│  │  (Complex Sites)       │ ││  │
│  │  │  │            │  │            │  │                        │ ││  │
│  │  │  │  • Fast    │  │ • JS Exec  │  │  • Full Browser        │ ││  │
│  │  │  │  • Light   │  │ • Dynamic  │  │  • Fallback            │ ││  │
│  │  │  └────────────┘  └────────────┘  └────────────────────────┘ ││  │
│  │  │                                                              ││  │
│  │  │  ┌─────────────────────────────────────────────────────────┐││  │
│  │  │  │           HTML Parser (BeautifulSoup)                   │││  │
│  │  │  │  • Remove <script>, <style>, <meta>                     │││  │
│  │  │  │  • Extract clean text                                   │││  │
│  │  │  │  • Preserve structure                                   │││  │
│  │  │  └─────────────────────────────────────────────────────────┘││  │
│  │  │                                                              ││  │
│  │  │  ┌─────────────────────────────────────────────────────────┐││  │
│  │  │  │        Recursive Loader (langchain)                     │││  │
│  │  │  │  • Follow links to depth N                              │││  │
│  │  │  │  • Stay within domain                                   │││  │
│  │  │  │  • Combine results                                      │││  │
│  │  │  └─────────────────────────────────────────────────────────┘││  │
│  │  │                                                              ││  │
│  │  │  ┌─────────────────────────────────────────────────────────┐││  │
│  │  │  │     AI Formatter (Optional - Together/Google)           │││  │
│  │  │  │  • Clean formatting                                     │││  │
│  │  │  │  • Remove boilerplate                                   │││  │
│  │  │  │  • Markdown output                                      │││  │
│  │  │  └─────────────────────────────────────────────────────────┘││  │
│  │  └──────────────────────────────────────────────────────────────┘│  │
│  │                                                                   │  │
│  │  ┌──────────────────────────────────────────────────────────────┐│  │
│  │  │                   Cache System                               ││  │
│  │  │  • TTL-based caching                                         ││  │
│  │  │  • Reduce redundant scrapes                                  ││  │
│  │  └──────────────────────────────────────────────────────────────┘│  │
│  │                                                                   │  │
│  │  ┌──────────────────────────────────────────────────────────────┐│  │
│  │  │                Configuration (config.py)                     ││  │
│  │  │  • CACHE_ENABLED, CACHE_TTL                                  ││  │
│  │  │  • LLM_ENABLED, LLM_PROVIDER                                 ││  │
│  │  └──────────────────────────────────────────────────────────────┘│  │
│  └───────────────────────────────────────────────────────────────────┘  │
└──────────────────────────────┬──────────────────────────────────────────┘
                               │
                               │ HTTP Requests
                               │
┌──────────────────────────────▼──────────────────────────────────────────┐
│                          TARGET WEBSITES                                 │
│                                                                          │
│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐                  │
│  │   Website 1  │  │   Website 2  │  │   Website N  │                  │
│  │              │  │              │  │              │                  │
│  │  HTML/CSS/JS │  │  HTML/CSS/JS │  │  HTML/CSS/JS │                  │
│  └──────────────┘  └──────────────┘  └──────────────┘                  │
└──────────────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════╗
║                          DATA FLOW                                       ║
╚══════════════════════════════════════════════════════════════════════════╝

  User → React UI → API Service → Flask API → Scraper → Website
                                       ↓
                                  Parse HTML
                                       ↓
                                  Clean Text
                                       ↓
                               (Optional) AI Format
                                       ↓
                                  Save to File
                                       ↓
   User ← React UI ← JSON Response ← Flask API


╔══════════════════════════════════════════════════════════════════════════╗
║                        FILE OUTPUT                                       ║
╚══════════════════════════════════════════════════════════════════════════╝

  ┌────────────────────────────────────────────────────────────────┐
  │                     Output Files (.txt)                        │
  │                                                                │
  │  Format:                                                       │
  │  ═══════════════════════════════════════════════              │
  │  SCRAPED WEBSITE CONTENT                                       │
  │  ═══════════════════════════════════════════════              │
  │  URL: https://example.com                                      │
  │  Title: Example Site                                           │
  │  Scraped on: 2025-10-31 15:00:00                              │
  │  Success: True                                                 │
  │  Scrape time: 2.5 seconds                                      │
  │  ═══════════════════════════════════════════════              │
  │  CONTENT:                                                      │
  │  ═══════════════════════════════════════════════              │
  │                                                                │
  │  [Clean, readable text content here...]                        │
  │                                                                │
  │  ═══════════════════════════════════════════════              │
  └────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════╗
║                     TECHNOLOGY STACK                                     ║
╚══════════════════════════════════════════════════════════════════════════╝

  Frontend:                  Backend:                 Scraping:
  ┌───────────────┐         ┌───────────────┐       ┌───────────────┐
  │ React 18      │         │ Flask 3.0     │       │ aiohttp       │
  │ JavaScript    │         │ Python 3.8+   │       │ BeautifulSoup │
  │ CSS3          │         │ asyncio       │       │ langchain     │
  │ Lucide Icons  │         │ flask-cors    │       │ Playwright    │
  │ Axios         │         │               │       │ Selenium      │
  └───────────────┘         └───────────────┘       └───────────────┘

  Optional AI:
  ┌───────────────────────────────────────────────────┐
  │ Together AI  │  Google Gemini  │  Custom LLM      │
  └───────────────────────────────────────────────────┘
```
